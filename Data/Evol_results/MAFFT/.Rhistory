# Let's format the tree labels
taxa_labels <- as.data.frame(get.tree(tree_madbub)$tip.label)
colnames(taxa_labels) <- c('Original_label')
taxa_labels2 <- taxa_labels %>%
mutate(New_label = gsub(pattern = '_MADBUB', replacement = ' (MADBUB)', x = Original_label)) %>%
mutate(New_label = gsub(pattern = '_MAD', replacement = ' (MAD)', x = New_label)) %>%
mutate(New_label = gsub(pattern = '_BUB', replacement = ' (BUB)', x = New_label)) %>%
mutate(New_label = gsub(pattern = '_', replacement = ' ', x = New_label))
# Include the new names
tree_madbub <-  rename_taxa(tree_madbub, taxa_labels2, Original_label, New_label)
# Plot the tree
p <- tree_madbub %>%
ggtree() +
geom_tiplab(align=T, size = 2.5, linesize=.3, fontface = 'italic') +
geom_treescale(x=0, y=80, offset=2) +
## Remove node labels once I have finished ##
# geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
# geom_text2(aes(label=node), hjust=-.3, size = 2) +
## End code for node labels ##
## Labels for mammals ##
geom_cladelabel(316, 'Mammals', offset=0.45, offset.text=.05,
barsize=3, color='darkgreen', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=316, fill='darkgreen', alpha=.4) +
geom_cladelabel(218, 'Mammals', offset=0.45, offset.text=.05,
barsize=3, color='darkgreen', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=218, fill='darkgreen', alpha=.4) +
## Labels for fish ##
geom_cladelabel(407, 'Fish', offset=0.45, offset.text=.05,
barsize=3, color='purple', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=407, fill='purple', alpha=.4) +
geom_cladelabel(309, 'Fish', offset=0.45, offset.text=.05,
barsize=3, color='purple', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=309, fill='purple', alpha=.4) +
## Labels for birds ##
geom_cladelabel(281, 'Birds', offset=0.45, offset.text=.05,
barsize=3, color='orange', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=281, fill='orange', alpha=.4) +
geom_cladelabel(378, 'Birds', offset=0.45, offset.text=.05,
barsize=3, color='orange', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=378, fill='orange', alpha=.4) +
## Labels for Reptiles ##
# geom_strip('Crocodylus_porosus_BUB', 'Salvator_merianae_BUB', color='pink',
#            label="Reptiles",  align = TRUE, offset=0.45, offset.text=.05,
#            barsize=3, angle=90, hjust='center') +
# geom_cladelabel(178, 'Reptiles', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# geom_cladelabel(405, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# geom_cladelabel(404, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
geom_hilight(node=405, fill='pink', alpha=.4) +
geom_hilight(node=404, fill='pink', alpha=.4) +
geom_hilight(node=178, fill='pink', alpha=.4) +
# geom_cladelabel(306, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# geom_cladelabel(307, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
geom_hilight(node=306, fill='pink', alpha=.4) +
geom_hilight(node=307, fill='pink', alpha=.4) +
geom_hilight(node=75, fill='pink', alpha=.4) +
# geom_cladelabel(59, 'Reptiles', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# Labels for MAD and BUB
geom_cladelabel(313, 'MAD', offset=0.6, offset.text=.05,
barsize=3, color='steelblue', angle=90, hjust='center', align =TRUE) +
geom_cladelabel(215, 'BUB', offset=0.6, offset.text=.05,
barsize=3, color='red', angle=90, hjust='center', align =TRUE)
p
p_flipped <- flip(p, 215, 312) +
geom_strip('Crocodylus porosus (BUB)', 'Salvator merianae (BUB)', color='pink',
label="Reptiles",  align = TRUE, offset=0.45, offset.text=.075,
barsize=3, angle=90, hjust='center', fontsize = 3) +
geom_strip('Chrysemys picta bellii (MAD)', 'Salvator merianae (MAD)', color='pink',
label="Reptiles",  align = TRUE, offset=0.45, offset.text=.075,
barsize=3, angle=90, hjust='center', fontsize = 3)
p_flipped
ggsave('Figures/Tree_species.pdf',
device = cairo_pdf, width = 14, height = 24, plot = p , dpi = 500)
# Load libraries
library(ggplot2)
library(reshape2)
library(tidyverse)
library(magrittr)
library(ggpubr)
library(ggsignif)
library(heatmaply)
library(RColorBrewer)
library(scales)
library(cowplot)
library(ggtree)
library(treeio)
# Set working directory
# setwd('<path_to_main_folder>')
setwd('/home/angelfcc/Documents/PhD_projects/BUBR1/BUBR1_coevolution_github/')
# Load tree
# tree_madbub <- read.mrbayes(file = '/home/angelfcc/Documents/PhD_projects/BUBR1/Results/MAFFT/Final_refined_alignments/Species_tree/MrBayes_complete_finalset/Species_selected_sequences_aln_mafft_newIDs.nex.con.tre')
tree_madbub <- read.mrbayes(file = 'Results/Species_tree_files/Tree_sequences_aln_mafft_newIDs.nex.con.tre')
# Let's format the tree labels
taxa_labels <- as.data.frame(get.tree(tree_madbub)$tip.label)
colnames(taxa_labels) <- c('Original_label')
taxa_labels2 <- taxa_labels %>%
mutate(New_label = gsub(pattern = '_MADBUB', replacement = ' (MADBUB)', x = Original_label)) %>%
mutate(New_label = gsub(pattern = '_MAD', replacement = ' (MAD)', x = New_label)) %>%
mutate(New_label = gsub(pattern = '_BUB', replacement = ' (BUB)', x = New_label)) %>%
mutate(New_label = gsub(pattern = '_', replacement = ' ', x = New_label))
# Include the new names
tree_madbub <-  rename_taxa(tree_madbub, taxa_labels2, Original_label, New_label)
# Plot the tree
p <- tree_madbub %>%
ggtree() +
geom_tiplab(align=T, size = 2.5, linesize=.3, fontface = 'italic') +
geom_treescale(x=0, y=80, offset=2) +
## Remove node labels once I have finished ##
# geom_text2(aes(subset=!isTip, label=node), hjust=-.3) +
# geom_text2(aes(label=node), hjust=-.3, size = 2) +
## End code for node labels ##
## Labels for mammals ##
geom_cladelabel(316, 'Mammals', offset=0.45, offset.text=.05,
barsize=3, color='darkgreen', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=316, fill='darkgreen', alpha=.4) +
geom_cladelabel(218, 'Mammals', offset=0.45, offset.text=.05,
barsize=3, color='darkgreen', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=218, fill='darkgreen', alpha=.4) +
## Labels for fish ##
geom_cladelabel(407, 'Fish', offset=0.45, offset.text=.05,
barsize=3, color='purple', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=407, fill='purple', alpha=.4) +
geom_cladelabel(309, 'Fish', offset=0.45, offset.text=.05,
barsize=3, color='purple', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=309, fill='purple', alpha=.4) +
## Labels for birds ##
geom_cladelabel(281, 'Birds', offset=0.45, offset.text=.05,
barsize=3, color='orange', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=281, fill='orange', alpha=.4) +
geom_cladelabel(378, 'Birds', offset=0.45, offset.text=.05,
barsize=3, color='orange', angle=90, hjust='center', align = TRUE,
fontsize = 3) +
geom_hilight(node=378, fill='orange', alpha=.4) +
## Labels for Reptiles ##
# geom_strip('Crocodylus_porosus_BUB', 'Salvator_merianae_BUB', color='pink',
#            label="Reptiles",  align = TRUE, offset=0.45, offset.text=.05,
#            barsize=3, angle=90, hjust='center') +
# geom_cladelabel(178, 'Reptiles', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# geom_cladelabel(405, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# geom_cladelabel(404, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
geom_hilight(node=405, fill='pink', alpha=.4) +
geom_hilight(node=404, fill='pink', alpha=.4) +
geom_hilight(node=178, fill='pink', alpha=.4) +
# geom_cladelabel(306, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# geom_cladelabel(307, '', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
geom_hilight(node=306, fill='pink', alpha=.4) +
geom_hilight(node=307, fill='pink', alpha=.4) +
geom_hilight(node=75, fill='pink', alpha=.4) +
# geom_cladelabel(59, 'Reptiles', offset=0.45, offset.text=.05,
#                 barsize=3, color='pink', angle=90, hjust='center', align = TRUE) +
# Labels for MAD and BUB
geom_cladelabel(313, 'MAD', offset=0.6, offset.text=.05,
barsize=3, color='steelblue', angle=90, hjust='center', align =TRUE) +
geom_cladelabel(215, 'BUB', offset=0.6, offset.text=.05,
barsize=3, color='red', angle=90, hjust='center', align =TRUE)
p
p_flipped <- flip(p, 215, 312) +
geom_strip('Crocodylus porosus (BUB)', 'Salvator merianae (BUB)', color='pink',
label="Reptiles",  align = TRUE, offset=0.45, offset.text=.075,
barsize=3, angle=90, hjust='center', fontsize = 3) +
geom_strip('Chrysemys picta bellii (MAD)', 'Salvator merianae (MAD)', color='pink',
label="Reptiles",  align = TRUE, offset=0.45, offset.text=.075,
barsize=3, angle=90, hjust='center', fontsize = 3)
p_flipped
ggsave('Figures/Tree_species2.pdf',
device = cairo_pdf, width = 14, height = 24, plot = p , dpi = 500)
# Set working directory
setwd('/home/angelfcc/Documents/PhD_projects/BUBR1/BUBR1_coevolution_github/Data/Evol_results/MAFFT')
## Original filter
entropy_bubr1 <- read_delim('BUBR1_entropy_2020_05_08.txt', delim = '\t', col_names = c('entropy')) %>%
mutate(protein = 'BUBR1', position = row_number())
entropy_bub1 <- read_delim('BUB1_entropy_2020_05_08.txt', delim = '\t', col_names = c('entropy')) %>%
mutate(protein = 'BUB1', position = row_number())
human_bub1_bubr1_aln <- read_delim('../../Sequences/Human_domains/Alignments/Tables/Human_domains_Tromer_table.txt', delim = '\t')
bub1_bubr1_entropy <- rbind(entropy_bub1, entropy_bubr1)
entropy_common_domains <- inner_join(x = bub1_bubr1_entropy, y = human_bub1_bubr1_aln,
by = c('position' = 'Position', 'protein' = 'Protein'))
View(entropy_common_domains)
entropy_common_domains %>% filter(protein == 'BUBR1', position = 795)
entropy_common_domains %>% filter(protein == 'BUBR1', position == 795)
entropy_common_domains %>% filter(Group == 323)
?distinct
?complete
# Set working directory
setwd('/home/angelfcc/Documents/PhD_projects/BUBR1/BUBR1_coevolution_github/Data/Evol_results/MAFFT')
## Original filter
entropy_bubr1 <- read_delim('BUBR1_entropy_2020_05_08.txt', delim = '\t', col_names = c('entropy')) %>%
mutate(protein = 'BUBR1', position = row_number())
entropy_bub1 <- read_delim('BUB1_entropy_2020_05_08.txt', delim = '\t', col_names = c('entropy')) %>%
mutate(protein = 'BUB1', position = row_number())
human_bub1_bubr1_aln <- read_delim('../../Sequences/Human_domains/Alignments/Tables/Human_domains_Tromer_table.txt', delim = '\t')
bub1_bubr1_entropy <- rbind(entropy_bub1, entropy_bubr1)
entropy_common_domains <- inner_join(x = bub1_bubr1_entropy, y = human_bub1_bubr1_aln,
by = c('position' = 'Position', 'protein' = 'Protein'))
entropy_common_domains %<>%
# mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(917, 919, 946, 655, 661, 665, 654, 657, 659, 660)), 1,
#                         ifelse(and(protein == 'BUBR1', position %in% c(882, 884, 911, 670, 676, 680, 669, 672, 674, 675)), 1, 0)))
mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(821, 917, 946, 655, 661, 665, 654, 657, 659, 660)), 1,
ifelse(and(protein == 'BUBR1', position %in% c(795, 882, 911, 670, 676, 680, 669, 672, 674, 675)), 1, 0)))
entropy_common_domains %<>%
mutate(Domain = gsub(x = Domain, pattern = 'kinase', replacement = '(Pseudo)kinase'))
entropy_common_domains$Domain <- factor(entropy_common_domains$Domain,
levels = c('TPR', 'GLEBS', 'ABBA3', 'PLKBD', 'KARD', 'CDII', '(Pseudo)kinase'))
check_paired <- as.data.frame(table(entropy_common_domains$Group) == 2)
check_paired <- cbind(as.numeric(rownames(check_paired)),check_paired)
colnames(check_paired) <- c('Group', 'Paired')
entropy_common_domains_new <- inner_join(x = entropy_common_domains, y = check_paired,
by = c('Group' = 'Group'))
## With MVA mutants ##
# Color code:
# 0: Regular residues (gray)
# 1: Kinase catalytic triad (red)
# 2: KARD phosphosites (blue)
# 3: MVA mutations (green)
entropy_common_domains_new %<>%
mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(917, 919, 946)), 1,
ifelse(and(protein == 'BUBR1', position %in% c(882, 884, 911)), 1,
ifelse(and(protein == 'BUB1', position %in% c(655, 661, 665)), 2,
ifelse(and(protein == 'BUBR1', position %in% c(670, 676, 680)), 2,
ifelse(and(protein == 'BUB1', position %in% c(747, 840, 877, 1047)), 3,
ifelse(and(protein == 'BUBR1', position %in% c(727, 814, 844, 1012)), 3,0)
)
)
)
)
)
)
# Draw the figure with all the paired points
p_boxplots_entropy <- entropy_common_domains_new %>% filter(Paired == TRUE) %>%
ggplot(aes(x = protein, y = entropy, fill = protein)) +
scale_fill_manual(values = c('#e6e6e6', '#cccccc')) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
facet_grid(cols = vars(Domain)) +
geom_line(aes(group = Group, colour = factor(key_res), alpha = factor(key_res))) +
scale_colour_manual(values = c('black', 'red', 'blue', '#009900')) +
scale_alpha_manual(values = c(0.1, 0.8, 0.8, 0.8)) +
geom_point() +
theme(panel.border = element_rect(linetype = "solid", colour = "black", size=1),
strip.background = element_rect(fill = 'white'),
legend.position = 'none'
) +
xlab('Protein') + ylab('Entropy') +
stat_compare_means(comparisons = list(c('BUB1', 'BUBR1')), paired = T, method = 't.test')
p_final <- p_boxplots_entropy +
geom_point(data = entropy_common_domains_new %>% filter(Paired == FALSE))
p_final
# Load libraries
library(ggplot2)
library(reshape2)
library(tidyverse)
library(cowplot)
library(magrittr)
library(ggpubr)
library(ggsignif)
library(heatmaply)
library(RColorBrewer)
library(scales)
theme_set(theme_cowplot())
# Set working directory
setwd('/home/angelfcc/Documents/PhD_projects/BUBR1/BUBR1_coevolution_github/Data/Evol_results/MAFFT')
## Original filter
entropy_bubr1 <- read_delim('BUBR1_entropy_2020_05_08.txt', delim = '\t', col_names = c('entropy')) %>%
mutate(protein = 'BUBR1', position = row_number())
entropy_bub1 <- read_delim('BUB1_entropy_2020_05_08.txt', delim = '\t', col_names = c('entropy')) %>%
mutate(protein = 'BUB1', position = row_number())
human_bub1_bubr1_aln <- read_delim('../../Sequences/Human_domains/Alignments/Tables/Human_domains_Tromer_table.txt', delim = '\t')
bub1_bubr1_entropy <- rbind(entropy_bub1, entropy_bubr1)
entropy_common_domains <- inner_join(x = bub1_bubr1_entropy, y = human_bub1_bubr1_aln,
by = c('position' = 'Position', 'protein' = 'Protein'))
entropy_common_domains %<>%
# mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(917, 919, 946, 655, 661, 665, 654, 657, 659, 660)), 1,
#                         ifelse(and(protein == 'BUBR1', position %in% c(882, 884, 911, 670, 676, 680, 669, 672, 674, 675)), 1, 0)))
mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(821, 917, 946, 655, 661, 665, 654, 657, 659, 660)), 1,
ifelse(and(protein == 'BUBR1', position %in% c(795, 882, 911, 670, 676, 680, 669, 672, 674, 675)), 1, 0)))
entropy_common_domains %<>%
mutate(Domain = gsub(x = Domain, pattern = 'kinase', replacement = '(Pseudo)kinase'))
entropy_common_domains$Domain <- factor(entropy_common_domains$Domain,
levels = c('TPR', 'GLEBS', 'ABBA3', 'PLKBD', 'KARD', 'CDII', '(Pseudo)kinase'))
check_paired <- as.data.frame(table(entropy_common_domains$Group) == 2)
check_paired <- cbind(as.numeric(rownames(check_paired)),check_paired)
colnames(check_paired) <- c('Group', 'Paired')
entropy_common_domains_new <- inner_join(x = entropy_common_domains, y = check_paired,
by = c('Group' = 'Group'))
## With MVA mutants ##
# Color code:
# 0: Regular residues (gray)
# 1: Kinase catalytic triad (red)
# 2: KARD phosphosites (blue)
# 3: MVA mutations (green)
entropy_common_domains_new %<>%
# mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(917, 919, 946)), 1,
#                         ifelse(and(protein == 'BUBR1', position %in% c(882, 884, 911)), 1,
mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(821, 917, 946)), 1,
ifelse(and(protein == 'BUBR1', position %in% c(795, 882, 911)), 1,
ifelse(and(protein == 'BUB1', position %in% c(655, 661, 665)), 2,
ifelse(and(protein == 'BUBR1', position %in% c(670, 676, 680)), 2,
ifelse(and(protein == 'BUB1', position %in% c(747, 840, 877, 1047)), 3,
ifelse(and(protein == 'BUBR1', position %in% c(727, 814, 844, 1012)), 3,0)
)
)
)
)
)
)
# Draw the figure with all the paired points
p_boxplots_entropy <- entropy_common_domains_new %>% filter(Paired == TRUE) %>%
ggplot(aes(x = protein, y = entropy, fill = protein)) +
scale_fill_manual(values = c('#e6e6e6', '#cccccc')) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
facet_grid(cols = vars(Domain)) +
geom_line(aes(group = Group, colour = factor(key_res), alpha = factor(key_res))) +
scale_colour_manual(values = c('black', 'red', 'blue', '#009900')) +
scale_alpha_manual(values = c(0.1, 0.8, 0.8, 0.8)) +
geom_point() +
theme(panel.border = element_rect(linetype = "solid", colour = "black", size=1),
strip.background = element_rect(fill = 'white'),
legend.position = 'none'
) +
xlab('Protein') + ylab('Entropy') +
stat_compare_means(comparisons = list(c('BUB1', 'BUBR1')), paired = T, method = 't.test')
p_final <- p_boxplots_entropy +
geom_point(data = entropy_common_domains_new %>% filter(Paired == FALSE))
p_final
entropy_common_domains_new %>% filter(key_res == 1)
entropy_common_domains <- inner_join(x = bub1_bubr1_entropy, y = human_bub1_bubr1_aln,
by = c('position' = 'Position', 'protein' = 'Protein'))
entropy_common_domains %<>%
mutate(Domain = gsub(x = Domain, pattern = 'kinase', replacement = '(Pseudo)kinase'))
entropy_common_domains$Domain <- factor(entropy_common_domains$Domain,
levels = c('TPR', 'GLEBS', 'ABBA3', 'PLKBD', 'KARD', 'CDII', '(Pseudo)kinase'))
check_paired <- as.data.frame(table(entropy_common_domains$Group) == 2)
check_paired <- cbind(as.numeric(rownames(check_paired)),check_paired)
colnames(check_paired) <- c('Group', 'Paired')
entropy_common_domains_new <- inner_join(x = entropy_common_domains, y = check_paired,
by = c('Group' = 'Group'))
## With MVA mutants ##
# Color code:
# 0: Regular residues (gray)
# 1: Kinase catalytic triad (red)
# 2: KARD phosphosites (blue)
# 3: MVA mutations (green)
entropy_common_domains_new %<>%
# mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(917, 919, 946)), 1,
#                         ifelse(and(protein == 'BUBR1', position %in% c(882, 884, 911)), 1,
mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(821, 917, 946)), 1,
ifelse(and(protein == 'BUBR1', position %in% c(795, 882, 911)), 1,
ifelse(and(protein == 'BUB1', position %in% c(655, 661, 665)), 2,
ifelse(and(protein == 'BUBR1', position %in% c(670, 676, 680)), 2,
ifelse(and(protein == 'BUB1', position %in% c(747, 840, 877, 1047)), 3,
ifelse(and(protein == 'BUBR1', position %in% c(727, 814, 844, 1012)), 3,0)
)
)
)
)
)
)
# Draw the figure with all the paired points
p_boxplots_entropy <- entropy_common_domains_new %>% filter(Paired == TRUE) %>%
ggplot(aes(x = protein, y = entropy, fill = protein)) +
scale_fill_manual(values = c('#e6e6e6', '#cccccc')) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
facet_grid(cols = vars(Domain)) +
geom_line(aes(group = Group, colour = factor(key_res), alpha = factor(key_res))) +
scale_colour_manual(values = c('black', 'red', 'blue', '#009900')) +
scale_alpha_manual(values = c(0.1, 0.8, 0.8, 0.8)) +
geom_point() +
theme(panel.border = element_rect(linetype = "solid", colour = "black", size=1),
strip.background = element_rect(fill = 'white'),
legend.position = 'none'
) +
xlab('Protein') + ylab('Entropy') +
stat_compare_means(comparisons = list(c('BUB1', 'BUBR1')), paired = T, method = 't.test')
p_final <- p_boxplots_entropy +
geom_point(data = entropy_common_domains_new %>% filter(Paired == FALSE))
p_final
#### Need to update the figure name ####
ggsave(plot = p_final, device = cairo_pdf, width = 10, height = 7, dpi = 500,
filename = '../Figures/Entropy_common_domains_grayscale_MVA.pdf')
dev.off()
p_final
#### Need to update the figure name ####
ggsave(plot = p_final, device = cairo_pdf, width = 10, height = 7, dpi = 500,
filename = '../Figures/Entropy_common_domains_grayscale_MVA.pdf')
#### Need to update the figure name ####
ggsave(plot = p_final, device = cairo_pdf, width = 10, height = 7, dpi = 500,
filename = '../../../Figures/Entropy_common_domains_grayscale_MVA.pdf')
# Draw the figure with all the paired points
p_boxplots_entropy <- entropy_common_domains_new %>% filter(Paired == TRUE) %>%
ggplot(aes(x = protein, y = entropy, fill = protein)) +
scale_fill_manual(values = c('#e6e6e6', '#cccccc')) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
facet_grid(cols = vars(Domain)) +
geom_line(aes(group = Group, colour = factor(key_res), alpha = factor(key_res))) +
scale_colour_manual(values = c('black', 'red', 'blue', '#009900', '#9933ff')) +
scale_alpha_manual(values = c(0.1, 0.8, 0.8, 0.8)) +
geom_point() +
theme(panel.border = element_rect(linetype = "solid", colour = "black", size=1),
strip.background = element_rect(fill = 'white'),
legend.position = 'none'
) +
xlab('Protein') + ylab('Entropy') +
stat_compare_means(comparisons = list(c('BUB1', 'BUBR1')), paired = T, method = 't.test')
p_final <- p_boxplots_entropy +
geom_point(data = entropy_common_domains_new %>% filter(Paired == FALSE))
p_final
# Draw the figure with all the paired points
p_boxplots_entropy <- entropy_common_domains_new %>% filter(Paired == TRUE) %>%
ggplot(aes(x = protein, y = entropy, fill = protein)) +
scale_fill_manual(values = c('#e6e6e6', '#cccccc')) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
facet_grid(cols = vars(Domain)) +
geom_line(aes(group = Group, colour = factor(key_res), alpha = factor(key_res))) +
scale_colour_manual(values = c('black', 'red', 'blue', '#009900', '#9933ff')) +
scale_alpha_manual(values = c(0.1, 0.8, 0.8, 0.8, 0.8)) +
geom_point() +
theme(panel.border = element_rect(linetype = "solid", colour = "black", size=1),
strip.background = element_rect(fill = 'white'),
legend.position = 'none'
) +
xlab('Protein') + ylab('Entropy') +
stat_compare_means(comparisons = list(c('BUB1', 'BUBR1')), paired = T, method = 't.test')
p_final <- p_boxplots_entropy +
geom_point(data = entropy_common_domains_new %>% filter(Paired == FALSE))
p_final
# Draw the figure with all the paired points
p_boxplots_entropy <- entropy_common_domains_new %>% filter(Paired == TRUE) %>%
ggplot(aes(x = protein, y = entropy, fill = protein)) +
scale_fill_manual(values = c('#e6e6e6', '#cccccc')) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
facet_grid(cols = vars(Domain)) +
geom_line(aes(group = Group, colour = factor(key_res), alpha = factor(key_res))) +
scale_colour_manual(values = c('black', 'red', 'blue', '#009900', 'red')) +
scale_alpha_manual(values = c(0.1, 0.8, 0.8, 0.8, 0.8)) +
geom_point() +
theme(panel.border = element_rect(linetype = "solid", colour = "black", size=1),
strip.background = element_rect(fill = 'white'),
legend.position = 'none'
) +
xlab('Protein') + ylab('Entropy') +
stat_compare_means(comparisons = list(c('BUB1', 'BUBR1')), paired = T, method = 't.test')
p_final <- p_boxplots_entropy +
geom_point(data = entropy_common_domains_new %>% filter(Paired == FALSE))
p_final
entropy_common_domains_new %<>%
mutate(key_res = ifelse(and(protein == 'BUB1', position %in% c(821, 917, 946)), 1,
ifelse(and(protein == 'BUBR1', position %in% c(795, 882, 911)), 1,
ifelse(and(protein == 'BUB1', position %in% c(655, 661, 665)), 2,
ifelse(and(protein == 'BUBR1', position %in% c(670, 676, 680)), 2,
ifelse(and(protein == 'BUB1', position %in% c(747, 840, 877, 1047)), 3,
ifelse(and(protein == 'BUBR1', position %in% c(727, 814, 844, 1012)), 3,
ifelse(and(protein == 'BUB1', position == 919), 4,
ifelse(and(protein == 'BUBR1', position == 884), 4,0)
)
)
)
)
)
)
)
)
# Draw the figure with all the paired points
p_boxplots_entropy <- entropy_common_domains_new %>% filter(Paired == TRUE) %>%
ggplot(aes(x = protein, y = entropy, fill = protein)) +
scale_fill_manual(values = c('#e6e6e6', '#cccccc')) +
geom_boxplot(outlier.shape = NA, alpha = 0.5) +
facet_grid(cols = vars(Domain)) +
geom_line(aes(group = Group, colour = factor(key_res), alpha = factor(key_res))) +
scale_colour_manual(values = c('black', 'red', 'blue', '#009900', '#9933ff')) +
scale_alpha_manual(values = c(0.1, 0.8, 0.8, 0.8, 0.8)) +
geom_point() +
theme(panel.border = element_rect(linetype = "solid", colour = "black", size=1),
strip.background = element_rect(fill = 'white'),
legend.position = 'none'
) +
xlab('Protein') + ylab('Entropy') +
stat_compare_means(comparisons = list(c('BUB1', 'BUBR1')), paired = T, method = 't.test')
p_final <- p_boxplots_entropy +
geom_point(data = entropy_common_domains_new %>% filter(Paired == FALSE))
p_final
#### Need to update the figure name ####
ggsave(plot = p_final, device = cairo_pdf, width = 10, height = 7, dpi = 500,
filename = '../../../Figures/Entropy_common_domains_grayscale_MVA_S884.pdf')
View(entropy_common_domains)
entropy_common_domains %>% filter(protein = 'BUBR1', position = 911)
entropy_common_domains %>% filter(protein == 'BUBR1', position = 911)
entropy_common_domains %>% filter(protein == 'BUBR1', position == 911)
entropy_common_domains %>% filter(protein == 'BUB1', position == 911)
entropy_common_domains %>% filter(group == 448)
entropy_common_domains_new %>% filter(group == 448)
entropy_common_domains_new %>% filter(Group == 448)
entropy_common_domains_new %>% filter(Group == 323)
